import{Q as j,R as G,U as H,t as c,c as p,b as W,S as y,a as z,g as d,n as w,d as V,s as A,bC as q,f as K,k as F,F as Z,Z as T,bM as b,bN as g,$ as J}from"./index.9133c348.js";import{B as Q}from"./ButtonMenu.e39fa0e7.js";var v={},X=G.exports;Object.defineProperty(v,"__esModule",{value:!0});var L=v.default=void 0,ee=X(j),te=H,re=(0,ee.default)((0,te.jsx)("path",{d:"M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z"}),"Sort");L=v.default=re;var l=(t=>(t.GROUP_BY_ROW_SORT_BY_TYPE_AND_NAME="groupByRowSortByTypeAndName",t.GROUP_BY_TYPE_SORT_BY_NAME="groupByTypeSortByName",t.SORT_BY_TYPE_AND_NAME="sortByTypeAndName",t.SORT_BY_NAME="sortByName",t))(l||{});const k={initial:0,self:1,ally:2,ally2:3,ally3:4},Y=(t,e)=>{var n,i;return k[(n=t.reinforcement)!=null?n:"initial"]-k[(i=e.reinforcement)!=null?i:"initial"]},B=w([(t,e)=>d(t.shipDefinition).localeCompare(d(e.shipDefinition),V()),Y]),E=w([(t,e)=>A(t.shipDefinition.type,t.shipDefinition.subType)-A(e.shipDefinition.type,e.shipDefinition.subType),B,Y]);function de(t,e){switch(t){case"groupByRowSortByTypeAndName":return{groupedBy:t,groups:ne(e.ships)};case"groupByTypeSortByName":return{groupedBy:t,groups:oe(e.ships)};case"sortByTypeAndName":return{groupedBy:t,groups:[{id:"all",name:c("fleetSetup.fleetFormation"),ships:e.ships.map(n=>({...n,carriedShips:[...n.carriedShips].sort(E)})).sort(E),count:e.ships.map(n=>n.count).reduce((n,i)=>n+i,0)}]};case"sortByName":return{groupedBy:t,groups:[{id:"all",name:c("fleetSetup.fleetFormation"),ships:e.ships.map(n=>({...n,carriedShips:[...n.carriedShips].sort(B)})).sort(B),count:e.ships.map(n=>n.count).reduce((n,i)=>n+i,0)}]};default:throw new Error(`Unknown group and sort option "${t}"`)}}function ne(t){return[y.FRONT,y.MIDDLE,y.BACK].map(e=>{const n=t.filter(r=>{var o;return((o=r.rowOverride)!=null?o:r.shipDefinition.row)===e}).map(r=>({...r,carriedShips:[...r.carriedShips].sort(E)})).sort(E),i=n.map(r=>r.count).reduce((r,o)=>r+o,0);return{id:e,name:z(e),ships:n,count:i}})}function oe(t){return[p.CARRIER,p.AUXILIARY,p.BATTLE_CRUISER,p.CRUISER,p.DESTROYER,p.FRIGATE].map(e=>{const n=t.filter(r=>r.shipDefinition.type===e).map(r=>({...r,carriedShips:[...r.carriedShips].sort(B)})).sort(B),i=n.map(r=>r.count).reduce((r,o)=>r+o,0);return{id:e,name:W(e),ships:n,count:i}})}function ye(t,e){const n=q()?" ":"";return[t.name,e.groups.filter(i=>i.ships.length>0).map(i=>[...e.groups.length>1?[c("fleetSetup.groupNameForSharing",{name:i.name})]:[],...i.ships.flatMap(r=>{var s;const o=r.count*((s=r.costOverride)!=null?s:r.shipDefinition.cost),a=ie(r);switch(r.reinforcement){case"self":return[`${h(r.count)}\xD7\u3000${d(r.shipDefinition)}${n}${c("fleetSetup.reinforcementBrackets")}`,...a?[a]:[],..._(r.carriedShips)];case"ally":return[`${h(r.count)}\xD7\u3000${d(r.shipDefinition)}${n}${c("fleetSetup.orgReinforcementABrackets")}`,...a?[a]:[],..._(r.carriedShips)];case"ally2":return[`${h(r.count)}\xD7\u3000${d(r.shipDefinition)}${n}${c("fleetSetup.orgReinforcementBBrackets")}`,...a?[a]:[],..._(r.carriedShips)];case"ally3":return[`${h(r.count)}\xD7\u3000${d(r.shipDefinition)}${n}${c("fleetSetup.orgReinforcementCBrackets")}`,...a?[a]:[],..._(r.carriedShips)];default:return[`${h(r.count)}\xD7\u3000${d(r.shipDefinition)}${n}${c("fleetSetup.commandPointsValueBrackets",{value:o})}`,...a?[a]:[],..._(r.carriedShips)]}})].join(`
`)).join(`

`),[`${c("fleetSetup.reinforcementColon")}${n}${t.totalReinforcementCount}/${t.maxReinforcement}`,`${c("label.commandPointsColon")}${n}${t.totalCost}/${t.maxCost}`].join(`
`)].join(`

`)}function _(t){return t.map(e=>`\u3000\u3000 ${h(e.count)}\xD7\u3000${d(e.shipDefinition)}`)}function ie(t){if(t.moduleSelection===null)return null;const e=["M","A","B","C","D","E","F"].flatMap(n=>{var a,s,u;const r=Object.keys((s=(a=t.moduleSelection)==null?void 0:a.groups[n])!=null?s:{}).find(f=>{var m;return((m=t.moduleSelection)==null?void 0:m.groups[n][f].usage)==="used"});if(!r)return[];const o=(u=t.moduleSelection)==null?void 0:u.groups[n][r];return!o||o.module.defaultModule?[]:o?[`${K(t.shipDefinition.id,o.module)}\uFF08${o.module.id}\uFF09`]:[]});return e.length===0?null:e.map(n=>`\u3000\u3000 ${n}`).join(`
`)}function h(t){return t<10?`${t}`.padStart(3):`${t}`}const ge=t=>{const{value:e,onChange:n,buttonProps:i}=t;return F(Z,{children:F(Q,{icon:F(L,{}),text:c("button.displayItems"),value:e,options:[{key:l.GROUP_BY_ROW_SORT_BY_TYPE_AND_NAME,text:c("fleetSetup.groupByRowSortByShipTypeAndName"),value:l.GROUP_BY_ROW_SORT_BY_TYPE_AND_NAME},{key:l.GROUP_BY_TYPE_SORT_BY_NAME,text:c("fleetSetup.groupByShipTypeSortByName"),value:l.GROUP_BY_TYPE_SORT_BY_NAME},{key:l.SORT_BY_TYPE_AND_NAME,text:c("fleetSetup.sortByShipTypeAndName"),value:l.SORT_BY_TYPE_AND_NAME},{key:l.SORT_BY_NAME,text:c("fleetSetup.sortByName"),value:l.SORT_BY_NAME}],onClick:n,buttonProps:i})})};function he(){var t,e,n,i,r;return[(t=C("fleet1"))!=null?t:D(1),(e=C("fleet2"))!=null?e:D(2),(n=C("fleet3"))!=null?n:D(3),(i=C("fleet4"))!=null?i:D(4),(r=C("fleet5"))!=null?r:D(5)]}function Re(t){const e=JSON.stringify(se(t));window.localStorage.setItem(t.key,e)}function C(t){const e=window.localStorage.getItem(t);if(!e)return null;const n=fe(e);return n?ae(n,t):null}function ae(t,e){const n=ue(t),i=n.myListOnly===!0,r=n.ships.map(o=>{var a;return{...P({shipDefinition:T(o.shipId),usedModules:(a=o.usedModules)!=null?a:null,count:o.count,reinforcement:o.reinforcement,maxReinforcement:n.maxReinforcement}),carriedShips:o.carriedShips.map(s=>U({shipId:s.shipId,count:s.count,reinforcement:o.reinforcement})),rowOverride:o.row,costOverride:o.cost}});return{key:e,name:n.name,ships:r,totalCost:M(r),totalReinforcementCount:x(r),maxReinforcement:n.maxReinforcement,maxCost:n.maxCost,myListOnly:i}}function se(t){return{name:t.name,ships:t.ships.map(e=>({shipId:e.shipDefinition.id,usedModules:e.moduleSelection?ce(e.moduleSelection):void 0,carriedShips:e.carriedShips.map(n=>({shipId:n.shipDefinition.id,count:n.count})),count:e.count,reinforcement:e.reinforcement,cost:e.costOverride,row:e.rowOverride})),maxReinforcement:t.maxReinforcement,maxCost:t.maxCost,myListOnly:t.myListOnly}}function ue(t){const e=t.ships.reduce((i,r)=>{const o=b(r.shipId),a=T(o);if(!a)return i;let s;r.usedModules&&a.modules&&(s=r.usedModules.filter(f=>{var m;return!!((m=a.modules)!=null&&m.find(R=>R.id===f))}));const u=r.carriedShips.flatMap(f=>{const m=b(f.shipId);return T(m)?[{...f,shipId:m}]:[]});return[...i,{...r,shipId:o,usedModules:s,carriedShips:u}]},[]);return{...t,ships:e}}function ce(t){const e=[];return Object.keys(t.groups).forEach(n=>{Object.keys(t.groups[n]).forEach(i=>{t.groups[n][i].usage==="used"&&e.push(t.groups[n][i].module.id)})}),e}function fe(t){try{return JSON.parse(t)}catch(e){return alert("ERROR - Failed to restore fleet setup"),console.error(e),null}}function D(t){return{key:`fleet${t}`,name:c("fleetSetup.defaultFleetNameWithNumber",{fleetNumber:t}),ships:[],totalCost:0,totalReinforcementCount:0,maxReinforcement:5,maxCost:400,myListOnly:!0}}function P(t){const{shipDefinition:e,usedModules:n,count:i,reinforcement:r,maxReinforcement:o,temporary:a}=t,s=me(e,n),u=O(e,s),f=r===null||e.type===p.FIGHTER||e.type===p.CORVETTE?e.operationLimit:Math.min(e.operationLimit,o);return{shipDefinition:e,carrierCapabilities:u,carriedShips:[],count:Math.max(0,i),reinforcement:r,maxCount:f,moduleSelection:s,temporary:a,rowOverride:void 0,costOverride:void 0}}function me(t,e){if(!t.modules||t.modules.length===0)return null;const n=e!=null?e:t.modules.filter(r=>r.defaultModule&&r.category!=="STATIC").map(r=>r.id),i={configuable:!1,groups:{}};return t.modules.forEach(r=>{if(i.groups[r.category]||(i.groups[r.category]={}),r.category==="STATIC"){i.groups[r.category][r.id]={module:r,usage:"used"};return}i.configuable=!0,i.groups[r.category][r.id]={module:r,usage:n.includes(r.id)?"used":"not_used"}}),i}function O(t,e){var a;let n=0,i=0,r=0,o=(a=t.carryCorvette)!=null?a:0;if(t.carryFighter)switch(t.carryFighterType){case g.LARGE_FIGHTER:{n+=t.carryFighter;break}case g.MEDIUM_FIGHTER:{i+=t.carryFighter;break}case g.SMALL_FIGHTER:{r+=t.carryFighter;break}}return e&&Object.keys(e.groups).forEach(s=>{var u;Object.keys((u=e.groups[s])!=null?u:{}).forEach(f=>{var R,S,N,$;const m=e.groups[s][f];if(m.usage==="used"){switch(m.module.carryFighterType){case g.LARGE_FIGHTER:{n+=(R=m.module.carryFighter)!=null?R:0;break}case g.MEDIUM_FIGHTER:{i+=(S=m.module.carryFighter)!=null?S:0;break}case g.SMALL_FIGHTER:{r+=(N=m.module.carryFighter)!=null?N:0;break}}o+=($=m.module.carryCorvette)!=null?$:0}})}),{canCarry:n+i+r+o>0,carryUpToLargeFighter:n,carryUpToMediumFighter:i,carryUpToSmallFighter:r,carryCorvette:o}}function U(t){const{shipId:e,count:n,reinforcement:i,temporary:r}=t;return{shipDefinition:T(e),count:Math.max(0,n),reinforcement:i,temporary:r}}function _e(t){const{shipId:e,count:n,reinforcement:i,fleetSetup:r,keepZero:o}=t,a=T(e);let s=!0;const u={...r,ships:r.ships.flatMap(f=>f.shipDefinition.id!==e||f.reinforcement!==i?f:(s=!1,!o&&n<=0?[]:[{...f,count:n}]))};return s?{...u,ships:[...u.ships,P({shipDefinition:a,usedModules:null,count:n,reinforcement:i,maxReinforcement:r.maxReinforcement})],totalCost:M(u.ships),totalReinforcementCount:x(u.ships)}:{...u,totalCost:M(u.ships),totalReinforcementCount:x(u.ships)}}function Ce(t){const{shipId:e,carrierShipId:n,count:i,reinforcement:r,fleetSetup:o,keepZero:a}=t;return{...o,ships:o.ships.map(s=>s.shipDefinition.id!==n||s.reinforcement!==r?s:s.carriedShips.find(u=>u.shipDefinition.id===e)?{...s,carriedShips:s.carriedShips.flatMap(u=>{if(u.shipDefinition.id!==e)return[u];if(u.reinforcement!==r)throw new Error("Detected invalid reinforcement");return!a&&i<=0?[]:[{...u,count:Math.max(0,i),reinforcement:r}]})}:{...s,carriedShips:[...s.carriedShips,U({shipId:e,count:i,reinforcement:r})]})}}function De(t){const{shipId:e,reinforcement:n,moduleSelection:i,fleetSetup:r}=t;return{...r,ships:r.ships.map(o=>o.shipDefinition.id!==e?o:n!=null&&n.includes("ally")?o.reinforcement===n?{...o,moduleSelection:i,carrierCapabilities:O(o.shipDefinition,i)}:o:!o.reinforcement||!o.reinforcement.includes("ally")?{...o,moduleSelection:i,carrierCapabilities:O(o.shipDefinition,i)}:o)}}function Te(t,e,n){return{...n,groups:{...n.groups,[t]:Object.keys(n.groups[t]).reduce((i,r)=>{const o=n.groups[t][r];return{...i,[r]:r===e?{...o,usage:"used"}:{...o,usage:"not_used"}}},n.groups[t])}}}function Be(t){return{...t.fleetSetup,ships:t.fleetSetup.ships.map(e=>e.shipDefinition.id!==t.shipId?e:{...e,rowOverride:t.row!==e.shipDefinition.row?t.row:void 0,costOverride:t.cost!==e.shipDefinition.cost?t.cost:void 0})}}function M(t){return t.filter(e=>e.reinforcement===null).map(e=>{var n;return e.count*((n=e.costOverride)!=null?n:e.shipDefinition.cost)}).reduce((e,n)=>e+n,0)}function x(t){return t.filter(e=>e.reinforcement!==null).map(e=>e.count).reduce((e,n)=>e+n,0)}function Ee(t){let e=0;const n=t.map(o=>o.count).reduce((o,a)=>o+a,0),i=Object.keys(J).reduce((o,a)=>({...o,[a]:0}),{}),r={[y.FRONT]:0,[y.MIDDLE]:0,[y.BACK]:0,[y.NONE]:0};return t.forEach(o=>{var a;o.reinforcement===null&&(e+=o.count*((a=o.costOverride)!=null?a:o.shipDefinition.cost)),i[o.shipDefinition.type]+=o.count,r[o.shipDefinition.row]+=o.count,o.carriedShips.length>0&&o.carriedShips.forEach(s=>{i[s.shipDefinition.type]+=s.count})}),{shipCount:n,shipCountByType:i,shipCountByRow:r,totalCost:e}}function Fe(t){var n,i;const e={};return t.name.length===0&&(e.name=c("validation.requiredField")),(!Number.isFinite(t.maxReinforcement)||t.maxReinforcement<0)&&(e.maxReinforcement=c("validation.invalidValue")),(!Number.isFinite(t.maxCost)||t.maxCost<300||t.maxCost>450)&&(e.maxCost=c("validation.invalidValue")),t.maxCost>400&&t.maxReinforcement>5&&(e.maxReinforcement=(n=e.maxReinforcement)!=null?n:c("fleetSetup.maxOneDockingEffect"),e.maxCost=(i=e.maxCost)!=null?i:c("fleetSetup.maxOneDockingEffect")),e}function Oe(t){const e={},n={},i={};return t.ships.forEach(r=>{const o=I(r.shipDefinition.id,r.reinforcement);if(n[o]){const a=n[o];n[o]={count:r.reinforcement===null?r.count:a.count,reinforcementCount:r.reinforcement!==null?r.count:a.reinforcementCount,operationLimit:r.shipDefinition.operationLimit}}else n[o]={count:r.reinforcement===null?r.count:0,reinforcementCount:r.reinforcement!==null?r.count:0,operationLimit:r.shipDefinition.operationLimit};r.carriedShips.forEach(a=>{const s=I(a.shipDefinition.id,r.reinforcement);i[s]?i[s].count+=a.count:i[s]={count:a.count,operationLimit:a.shipDefinition.operationLimit}})}),Object.keys(n).forEach(r=>{const o=n[r];o.count+o.reinforcementCount>o.operationLimit&&(e[r]=c("fleetSetup.exceedingTotalOperationLimit"))}),Object.keys(i).forEach(r=>{const o=i[r];o.count>o.operationLimit&&(e[r]=c("fleetSetup.exceedingTotalOperationLimit"))}),e}function I(t,e){const n=e!=null&&e.includes("ally")?e:"self";return`${t}#${n}`}export{l as G,ge as S,he as a,Ee as b,_e as c,Ce as d,De as e,ye as f,de as g,Be as h,D as i,Fe as j,P as k,Te as l,se as m,I as n,U as o,Re as s,ae as u,Oe as v};
